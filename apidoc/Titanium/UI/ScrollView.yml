---
name: Titanium.UI.ScrollView
summary: |
    A Scroll View is used to create a scrollable region of content.  
description: |
    Views added to the Scroll View will be scrolled based on the content size of the 
    Scroll View. The Scroll View is created by the method <Titanium.UI.createScrollView>. 

    If your scrollable region fits within the size of the content area the scroll view will not scroll.

    #### Android Implementation Notes
    In Android, Scroll Views can only scroll in one direction, either vertical 
    or horizontal, but not both at the same time. Use the <Titanium.UI.ScrollView.scrollType> 
    property to set the scroll direction explicitly.

    
    If the `scrollType` property is *not* set, the scroll view
    attempts to deduce the scroll direction based on some of the other
    properties that have been set.  Specifically, if `contentWidth` and `width`
    are both set and are equal to each other, or if they are both set *and*
    `showVerticalScrollIndicator` is set to `true`, then the scroll direction
    is set to "vertical".  If `contentHeight` and `height` are both set and are
    equal, or if they are both set and `showHorizontalScrollIndicator` is set
    to `true`, then the scroll direction is set to "horizontal".  If
    `scrollType` is set, it overrides the deduced setting.
extends: Titanium.UI.View
since: "0.9"
methods:
  - name: scrollTo
    summary: scrollTo a particular point
    parameters:
      - name: x
        summary: the x point within the view
        type: Number
      - name: y
        summary: the y point within the view
        type: Number
  - name: setContentOffset
    summary: Sets the value of [contentOffset](Titanium.UI.ScrollView.contentOffset) property.
    description: |
        In iOS, there is an additional parameter `animated` that can be used to enable or
        disable the animation while scrolling the contents offset. For example:
                 
                 setContentOffset({x:50,y:100},{animated:true})
    parameters:
      - name: contentOffset
        summary: New value for the property
        type: Object
      - name: animated
        summary: Whether this content area change should be animated.
        optional: true
        type: contentOffsetOption
events:
  - name: scale
    summary: fired when the zoom scale factor changes
    platforms: [android, iphone, ipad]
    properties:
      - name: scale
        summary: the new scale as a float
      - name: y
        summary: the y point of the event, in receiving view coordinates
      - name: x
        summary: the x point of the event in receiving view coordiantes
      - name: globalPoint
        summary: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
  - name: scroll
    summary: fired when the view is scrolled
    properties:
      - name: y
        summary: the y point of the event, in receiving view coordinates
      - name: x
        summary: the x point of the event in receiving view coordiantes
      - name: dragging
        summary: boolean to indicate if the scroll is based on a dragging gesture
        platforms: [iphone, ipad, mobileweb]
      - name: globalPoint
        summary: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
      - name: decelerating
        summary: boolean to indicate if the scroll is decelerating
        platforms: [iphone, ipad]
  - name: dragStart
    summary: fired when the scroll view is about to start scrolling the content.
    platforms: [iphone, ipad, mobileweb]
  - name: dragEnd
    summary: fired when when dragging ended in the scroll view.
    platforms: [iphone, ipad, mobileweb]
    properties:
      - name: decelerate
        summary: boolean. YES if the scrolling movement will continue, but decelerate, after a touch-up gesture during a dragging operation. If the value is NO, scrolling stops immediately upon touch-up.    
properties:
  - name: canCancelEvents
    summary: boolean to indicate if the scroll view can cancel subview touches in order to scroll instead. Default of true
    type: Boolean
    platforms: [iphone, ipad]
  - name: contentHeight
    summary: the height of the scrollable area
    type: Number
  - name: contentOffset
    summary: an object (with x and y properties) to indicate the offset of the content area
    type: Object
  - name: contentWidth
    summary: the width of the scrollable area
    type: Number
  - name: disableBounce
    summary: disable view bouncing.
    type: Boolean
    platforms: [iphone, ipad]
  - name: horizontalBounce
    summary: boolean to control the horizontal bounce during scrolling
    type: Boolean
    platforms: [iphone, ipad]
  - name: maxZoomScale
    summary: the maximum scale of the content
    type: Number
    platforms: [iphone, ipad]
  - name: minZoomScale
    summary: the minimum scale of the content
    type: Number
    platforms: [iphone, ipad]
  - name: scrollType
    summary: |
        For explicitly setting the direction -- "vertical" or "horizontal" -- in which the ScrollView will scroll.
        See also the documentation notes for more information concerning how Android deduces the scroll
        direction when this property is *not* set.
    type: String
    platforms: [android]
  - name: showHorizontalScrollIndicator
    summary: boolean to indicate whether the horizontal scroll indicator is visible
    type: Boolean
  - name: showVerticalScrollIndicator
    summary: boolean to indicate whether the vertical scroll indicator is visible
    type: Boolean
  - name: verticalBounce
    summary: boolean to control the vertical bounce during scrolling
    type: Boolean
    platforms: [iphone, ipad]
  - name: zoomScale
    summary: set the zoom scale for the current content area
    type: Number
    platforms: [iphone, ipad]
examples:
  - title: Simple Scroll View
    example: |
        Create a scroll view with content.
        
            var scrollView = Titanium.UI.createScrollView({
            	contentWidth:'auto',
            	contentHeight:'auto',
            	top:0,
            	showVerticalScrollIndicator:true,
            	showHorizontalScrollIndicator:true
            });
            var view = Ti.UI.createView({
            	backgroundColor:'#336699',
            	borderRadius:10,
            	width:300,
            	height:2000,
            	top:10
            });
            scrollView.add(view);
            Titanium.UI.currentWindow.add(scrollView);
        
---
name: contentOffsetOption
summary: Optional parameter for [setContentOffset](Titanium.UI.ScrollView.setContentOffset) method.
since: 1.8.1
platforms: [iphone, ipad]
properties:
  - name: animated
    summary: Boolean to indicate whether the scrollview's content area change is animated.
    type: Boolean
        
