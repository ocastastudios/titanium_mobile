---
name: Titanium.UI.ScrollableView
summary: The Scrollable View provides a view that supports horizontal scrolling on one or more views in a gesture motion.  The Scrollable View also optionally supports a visual paging control to indicate the page that the view is visible. The Scrollable View is created by the method <Titanium.UI.createScrollableView>.
extends: Titanium.UI.View
since: "0.8"
platforms: [android, iphone, ipad]
methods:
  - name: addView
    summary: add a new view to the Scrollable View
    parameters:
      - name: view
        summary: the view to add
        type: Object
  - name: removeView
    summary: remove an existing view from the Scrollable View
    parameters:
      - name: view
        summary: the view to remove
        type: Object
  - name: scrollToView
    summary: scroll to a specific view
    parameters:
      - name: view
        summary: either an integer index or the view object to bring into view as the currentPage
        type: [Number,Object]
events:
  - name: scroll
    summary: fired when the scroll view is scrolled
    properties:
      - name: currentPage
        summary: the current page index
      - name: y
        summary: the y point of the event, in receiving view coordinates
      - name: x
        summary: the x point of the event in receiving view coordiantes
      - name: globalPoint
        summary: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
      - name: view
        summary: the current page view
properties:
  - name: cacheSize
    summary: The number of views to cache (prerender).  Views are rendered in the range (currentPage +/- (cacheSize - 1)/2), ROUNDED DOWN for even values (i.e. cacheSize=4 renders 3 views into the cache).  Keep in mind that improved performance (larger cache) will lead to faster performance, but more memory usage.
    type: Number
    platforms: [iphone,ipad]
  - name: currentPage
    summary: the current page visible in the view
    type: Number
  - name: disableBounce
    summary: disable view bouncing.
    platforms: [iphone, ipad]
    type: Boolean
  - name: pagingControlColor
    summary: the color of the paging control. defaults to black.
    type: String
  - name: pagingControlHeight
    summary: the height in pixels of the paging control, if visible. defaults to 20
    type: Number
  - name: showPagingControl
    summary: boolean to indicate whether the paging control UI is visible
    type: Boolean
  - name: pagingControlTimeout
    summary: number of milliseconds to wait before hiding the paging control. Less than or equal to 0 disables timeout keeping controls displayed.
    platforms: [android, mobileweb]
    availability: creation
    type: Number
  - name: views
    summary: array of view objects to place in the view
    type: Array<Object>
examples:
  - title: Simple Scrollable View with 3 Views
    example: |
        Create three views and place each into a scrollable view.
        
            var view1 = Titanium.UI.createView({backgroundColor:'#123'});
            var view2 = Titanium.UI.createView({backgroundColor:'#123'});
            var view3 = Titanium.UI.createView({backgroundColor:'#123'});
            var scrollView = Titanium.UI.createScrollableView({
            	views:[view1,view2,view3],
            	showPagingControl:true
            });
            win.add(scrollView);
  - title: Simple Scrollable View with 2 zoombable images
    example: |
        Create two scroll views, each containing an image view, and place them into a scrollable view.

            var img1 = Ti.UI.createImageView({
                image:'http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/' +
                'Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/' +
                '402px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg'
            });
            var img1Wrapper = Ti.UI.createScrollView({
                maxZoomScale:4.0,
            });
            img1Wrapper.add(img1);

            var img2 = Ti.UI.createImageView({
                image:'http://www.nasa.gov/images/content/' + 
                '616903main_rover_comparison1600_1600-1200.jpg'
            });
            var img2Wrapper = Ti.UI.createScrollView({
                maxZoomScale:4.0,
            });
            img2Wrapper.add(img2);
            var photosView = Ti.UI.createScrollableView({
                showPagingControl:true,
                views:[img1Wrapper,img2Wrapper]
            });
            win.add(photosView);
description: |
    iOS Notes: In previous versions of ScrollableView, there were properties maxZoomScale and
    minZoomScale. These were removed for performance and parity reasons. If you do need this
    functionality, see the "Simple Scrollable View with 2 zoombable images" code example included.
